
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Параметры.Свойство("Настройки", Настройки);
		
	Заголовок = СтрШаблон("Логи настройки Кафки: %1", Настройки);
	Каталог = Справочники.НастройкиКафки.КаталогЛогов(Настройки);
	
	ОбновитьФайлыНаСервере();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура ФайлыПриАктивизацииСтроки(Элемент)
	
	ПрочитатьЛоги();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКоманд

&НаКлиенте
Процедура ФайлыПередУдалением(Элемент, Отказ)

	УдалитьФайлыНаСервере(Элементы.Файлы.ВыделенныеСтроки);
	ПрочитатьЛоги();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьФайлы(Команда)
	ОбновитьФайлыНаСервере();
КонецПроцедуры

&НаСервере
Процедура ОбновитьФайлыНаСервере()
	
	Файлы.Очистить();
	
	НайденныеФайлы = НайтиФайлы(Каталог, "*.log");
	Для каждого Файл Из НайденныеФайлы Цикл
		НоваяСтрока = Файлы.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, Файл);
	КонецЦикла;
	
	Файлы.Сортировать("Имя Убыв");
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ПрочитатьЛоги()
	
	Логи.Очистить();
	Если Элементы.Файлы.ТекущиеДанные = Неопределено Тогда
		Возврат;	
	КонецЕсли;
	
	ЛогФайл = Каталог + Элементы.Файлы.ТекущиеДанные.Имя;
	Если ЗначениеЗаполнено(ЛогФайл) Тогда
		ПрочитатьЛогиНаСервере(ЛогФайл);	
	КонецЕсли;
		
КонецПроцедуры

&НаСервере
Процедура ПрочитатьЛогиНаСервере(ЛогФайл)
	
	Файл = Новый Файл(ЛогФайл);
	
	Если НЕ Файл.Существует() Тогда
		Возврат;
	КонецЕсли;
	
	Логи.Прочитать(ЛогФайл);
	
КонецПроцедуры

&НаСервере
Процедура УдалитьФайлыНаСервере(Знач ИдентификаторыСтрок)
	
	Для каждого Идентификатор Из ИдентификаторыСтрок Цикл
		Строка = Файлы.НайтиПоИдентификатору(Идентификатор);
		УдалитьФайлы(Строка.ПолноеИмя);
	КонецЦикла;	
	
КонецПроцедуры

#КонецОбласти
